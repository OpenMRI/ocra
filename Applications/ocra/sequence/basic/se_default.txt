J 10 										// A[0] J to address 10 x 8 bytes A[B]
LOOP_CTR = 0x1 								// A[1] LOOP COUNTER (NO repetitions for now)
CMD1 = TX_GATE | RX_PULSE                   // A[2] UNUSED
CMD2 = 0x0                          		// A[3] UNUSED
CMD3 = 0x2                          				// A[4] all off (note that RX_PULSE use inverted logic)
CMD4 = 0X0                          				// A[5] only receiver on (all off, but do not reset RX FIFO)
CMD5 = TX_GATE | TX_PULSE | RX_PULSE    			// A[6] RF
CMD6 = TX_GATE | TX_PULSE           				// A[7] RF with receiver on
CMD7 = GRAD_PULSE | RX_PULSE           				// A[8] GRAD
CMD8 = GRAD_PULSE                   				// A[9] GRAD with receiver on
             CMD9 = TX_GATE | TX_PULSE | RX_PULSE | GRAD_PULSE	// A[A] RF&GRAD
CMD10 = TX_GATE | TX_PULSE | GRAD_PULSE				// A[B] RF&GRAD with receiver on
NOP   // A[C] UNUSED
NOP   // A[D] UNUSED
NOP   // A[E] UNUSED
NOP   // A[F] UNUSED
LD64 2, LOOP_CTR    						// A[10] Load LOOP_CTR to R[2]		"J here"
LD64 3, CMD3        						// A[11] Load CMD3 to R[3]
LD64 4, CMD4        						// A[12] Load CMD4 to R[4]
LD64 5, CMD5        						// A[13] Load CMD5 to R[5]
LD64 6, CMD6        						// A[14] Load CMD6 to R[6]
LD64 7, CMD7        						// A[15] Load CMD7 to R[7]
LD64 8, CMD8        						// A[16] Load CMD8 to R[8]
LD64 9, CMD9        						// A[17] Load CMD9 to R[9]
LD64 10, CMD10      						// A[18] Load CMD10 to R[10]
LD64 11, CMD1							// A[19] Load CMD1 to R[11]
NOP   // A[1A] UNUSED
NOP   // A[1B] UNUSED
NOP   // A[1C] UNUSED
TXOFFSET 0 							// A[1D] TXOFFSET 0: RF 90x+				"JNZ here"
GRADOFFSET 0 						// A[1E] GRADOFFSET 0
PR 11, 200  		// TX GATE ON for 200 us         // A[1F]  				
PR 5, 120		// RF 90        	        // A[20] PR R[5] (issue CMD5) and unblank for 120 us
PR 3, 4855		// wait				// A[21] PR R[3] (issue CMD3) and last for 4855 us (5000-145)
TXOFFSET 1000						// A[22] TXOFFSET 1000: RF 180x+
PR 11, 200		// TX GATE ON for 200 us        // A[23]
PR 5, 180		// RF 180			// A[24] PR R[5] (issue CMD5) and unblank for 180 us
PR 7, 1400		// wait&grad			// A[25] PR R[3] (issue CMD3) and last for 1400 us
PR 8, 200000	// readout				// A[26] PR R[9] (issue CMD9) and last for 200 ms (50,000 samples)
PR 4, 0  		// stop				// A[27] PR R[4] (issue CMD4) stop
DEC 2 										// A[28] DEC R[2]
JNZ 2, 0x1D 								// A[29] JNZ R[2] => `PC=0x1D
HALT 										// A[2A] HALT
